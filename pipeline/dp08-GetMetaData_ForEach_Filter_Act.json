{
	"name": "dp08-GetMetaData_ForEach_Filter_Act",
	"properties": {
		"activities": [
			{
				"name": "getInboundFiles",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_SRC",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "filterBusnissFiles",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "getInboundFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('getInboundFiles').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(\n    equals(item().type, 'File'),\n    contains(item().name,'_')\n)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "forEachFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "filterBusnissFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('filterBusnissFiles').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "SetFileName",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "SetFolderName",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "SetFileName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FolderName",
								"value": {
									"value": "@concat('outbound/', split(string(item().name), '_')[0], '/', split(split(string(item().name), '_')[1], '.')[0])\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "CopytoOutbound",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SetFolderName",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_SRC_WithParameters",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": "inbound",
										"FileName": {
											"value": "@variables('FileName')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Sink_WithParameters",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": {
											"value": "@variables('FolderName')",
											"type": "Expression"
										},
										"FileName": {
											"value": "@variables('FileName')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"concurrency": 3,
		"variables": {
			"FolderName": {
				"type": "String"
			},
			"FileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "03_Foreach"
		},
		"annotations": [],
		"lastPublishTime": "2025-06-04T00:30:32Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}